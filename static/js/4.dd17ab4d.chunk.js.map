{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/message/Message.jsx","components/login/AddMessageForm.jsx","components/dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","classes","dialog","active","to","activeClassName","activeLink","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogsElements","dialogs","map","key","messagesElements","messages","el","dialogsItems","values","addMessage","newMessageBody","mapPropsToState","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogsPage","newMessageText","dispatch","addMessageActionCreator"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,+FCgB1OC,EAbK,SAACC,GAEjB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,QAC3C,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,IAAQK,YAAaT,EAAMU,QCF5DC,EALC,SAACX,GACb,OAAO,yBAAKG,UAAWC,IAAQQ,SAAUZ,EAAMY,U,iCCC7CC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAK,WAAhBD,EAdQ,SAACf,GACpB,OAEI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACQ,kBAACC,EAAA,EAAD,CAAOC,YAAY,sBAAsBC,UAAWC,IAAUZ,KAAK,iBAAiBa,SAAU,CAACC,IAAUX,MAEjH,6BACI,oDCeDY,EAvBC,SAACzB,GAEb,IAAI0B,EAAkB1B,EAAM2B,QAAQC,KAAI,SAAAvB,GAAM,OAAI,kBAAC,EAAD,CAAaK,KAAML,EAAOK,KAAMmB,IAAKxB,EAAOH,GAAIA,GAAIG,EAAOH,QACzG4B,EAAmB9B,EAAM+B,SAASH,KAAI,SAAAI,GAAE,OAAI,kBAAC,EAAD,CAASpB,QAASoB,EAAGpB,QAASiB,IAAKG,EAAG9B,GAAIA,GAAI8B,EAAG9B,QAO5F,OACD,yBAAKC,UAAWC,IAAQuB,SACpB,yBAAKxB,UAAWC,IAAQ6B,cACnBP,GAEL,yBAAKvB,UAAWC,IAAQ2B,UACnBD,EACH,kBAAC,EAAD,CAAkBb,SAZN,SAACiB,GAC3BlC,EAAMmC,WAAWD,EAAOE,sB,+CCVpBC,EAAkB,SAACC,GAAD,MAAY,CAC3BC,OAAQD,EAAME,KAAKD,SAcXE,EAXU,SAACC,GAAe,IACnCC,EADkC,uKAGhC,OAAIC,KAAK5C,MAAMuC,OACR,kBAACG,EAAcE,KAAK5C,OADI,kBAAC,IAAD,CAAUO,GAAI,eAHb,GACRsC,IAAMH,WAOtC,OAAOI,YAAQT,EAARS,CAAyBH,I,OCShBI,sBACXD,aAlBiB,SAACR,GACnB,MAAO,CACHX,QAASW,EAAMU,YAAYrB,QAC3BI,SAAUO,EAAMU,YAAYjB,SAC5BkB,eAAgBX,EAAMU,YAAYC,mBAGjB,SAACC,GACtB,MAAO,CACHf,WAAY,SAACC,GACTc,EAASC,YAAwBf,SASxCK,EAFWM,CAGbtB","file":"static/js/4.dd17ab4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2YlaB\",\"dialogsItems\":\"Dialogs_dialogsItems__49UQ7\",\"active\":\"Dialogs_active__36eoV\",\"dialog\":\"Dialogs_dialog__1cunV\",\"messages\":\"Dialogs_messages__2InGc\",\"message\":\"Dialogs_message__2P3LQ\",\"activeLink\":\"Dialogs_activeLink__2-pIO\"};","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path} activeClassName={classes.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default DialogsItem;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/formsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                    <Field placeholder=\"Enter your message.\" component={Textarea} name=\"newMessageBody\" validate={[required, maxLength50 ]} />\r\n            </div>\r\n            <div>\r\n                <button>Add message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default reduxForm({form:\"message\"})(AddMessageForm)\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./dialogItem/DialogItem\";\r\nimport Message from \"./message/Message\";\r\nimport AddMessageForm from \"../login/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(dialog => <DialogsItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n    let messagesElements = props.messages.map(el => <Message message={el.message} key={el.id} id={el.id}/>)\r\n\r\n    const addNewMassage = (values) => {\r\nprops.addMessage(values.newMessageBody)\r\n    }\r\n\r\n\r\n         return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n              <AddMessageForm   onSubmit={addNewMassage} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nlet mapPropsToState = (state) => ({\r\n       isAuth: state.auth.isAuth\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\nclass RedirectComponent extends React.Component {\r\n    render() {\r\n        if(!this.props.isAuth)  return <Redirect to={\"/login\"}/>;\r\n        return <Component {...this.props}/>\r\n    }\r\n\r\n}\r\nreturn connect(mapPropsToState)(RedirectComponent);\r\n}\r\n\r\nexport default withAuthRedirect;","import React from \"react\";\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n export default compose(\r\n     connect(mapStateToProps, mapDispatchToProps),\r\n     withAuthRedirect\r\n )(Dialogs);"],"sourceRoot":""}