{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/navbar/Navbar.module.css","assets/images/user.png","assets/images/Spinner-Preloader-Gif/96x96.gif","serviceWorker.js","components/navbar/Navbar.jsx","components/news/News.jsx","components/music/Music.jsx","components/settings/Settings.jsx","components/common/Paginator/Paginator.jsx","components/users/User.jsx","components/users/Users.jsx","utils/object-helpers.js","redux/users-reducer.js","redux/users-selectors.js","components/users/UsersContainer.jsx","components/header/Header.jsx","redux/auth-reducer.js","components/header/HeaderContainer.jsx","components/login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/formsControls/FormsControls.js","components/common/preloader/Preloader.js","components/common/formsControls/FormsControls.module.css","utils/validators/validators.js","components/users/users.module.css","components/common/Paginator/Paginator.module.css","components/header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersAPI","follow","id","post","then","response","data","unfollow","delete","getUsers","currentPage","pageSize","get","getProfile","userId","console","warn","profileAPI","getStatus","updateStatus","status","put","authApi","me","login","email","password","rememberMe","logout","initialState","dialogs","name","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","classes","nav","item","to","activeClassName","activeLink","active","News","props","Music","Settings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","filter","p","map","key","cn","selectedPage","pageNumber","e","Users","user","followingInProgress","src","photos","small","userPhoto","followed","disabled","some","totalUsersCount","users","u","User","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","totalCount","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","stateCopy","postId"],"mappings":"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","file":"static/js/main.0c026589.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"0e4a0c37-3872-48f9-9ae4-37fa140cd311\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n\r\n    },\r\n\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    getProfile (userId) {\r\n        console.warn(\"Obsolete method. Please use profileAPI object.\")\r\n        return  profileAPI.getProfile(userId);\r\n    }\r\n\r\n\r\n    }\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return  instance.get(`profile/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n    getStatus (userId) {\r\n        return  instance.get(`profile/status/` + userId)\r\n            .then(response => response.data)\r\n    },\r\n   updateStatus (status) {\r\n        return  instance.put(`profile/status/`, {status: status})\r\n            .then(response => response.data)\r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\nexport const authApi = {\r\n\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => response.data);\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n\r\n}\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi!'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE,newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3rdJM\",\"item\":\"Navbar_item__2SG2l\",\"activeLink\":\"Navbar_activeLink__z8W4M\"};","module.exports = __webpack_public_path__ + \"static/media/user.129ab51c.png\";","module.exports = __webpack_public_path__ + \"static/media/96x96.3b544cc7.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport classes from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\nexport default Settings;","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Paginator = ({totalItemsCount,pageSize,currentPage,onPageChanged,portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n\r\n\r\n            <div className={styles.paginator}>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREVIOUS</button>}\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                    .map(p => <span key={p} className={cn({[styles.selectedPage]: currentPage === p}, styles.pageNumber)} onClick={(e) => {\r\n                    onPageChanged(p)\r\n                }}>{p}</span>)}\r\n\r\n                {portionCount > portionNumber &&\r\n                    <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Paginator;\r\n\r\n","import React from \"react\";\r\nimport classes from './users.module.css';\r\nimport userPhoto from \"../../assets/images/user.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = ({user, followingInProgress,follow,unfollow}) => {\r\n\r\n    return (\r\n\r\n         <div>\r\n<span>\r\n    <div>\r\n        <NavLink to={\"/profile/\" + user.id}>\r\n        <img src={user.photos.small ? user.photos.small : userPhoto} className={classes.userPhoto}/>\r\n        </NavLink>\r\n    </div>\r\n    <div>\r\n            {user.followed ?\r\n                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n          unfollow(user.id);\r\n                }\r\n                }>\r\n                    Unfollow</button> :\r\n                <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    follow(user.id);\r\n                }\r\n                }>\r\n                    Follow</button>}\r\n         </div>\r\n</span>\r\n                <span>\r\n    <span>\r\n        <div>{user.name}</div>\r\n        <div>{user.status}</div>\r\n    </span>\r\n    <span>\r\n        <div>{\"location.country\"}</div>\r\n        <div>{\"location.city\"}</div>\r\n    </span>\r\n</span>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Users;\r\n\r\n","import React from \"react\";\r\nimport classes from './users.module.css';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nconst Users = ({currentPage,onPageChanged,totalUsersCount,pageSize,users, ...props}) => {\r\n\r\n    return (\r\n\r\n        <div className={classes.user}>\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n\r\n\r\n            />\r\n<div>\r\n            {users.map(u => <User user={u}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  follow={props.follow}\r\n                                  unfollow={props.unfollow}\r\n                                                                    key={u.id}/>\r\n\r\n\r\n\r\n           )}\r\n</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Users;\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\nreturn items.map(u => {\r\n    if(u[objPropName] === itemId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n})\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"Id\",{followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"Id\",{followed: false})\r\n                              }\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    let response =  await usersAPI.getUsers(page, pageSize);\r\n\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n            }\r\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response =  await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))}\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n}\r\n\r\nexport const follow = (userId) => (dispatch) => {\r\n   followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI),followSuccess)\r\n\r\n}\r\nexport const unfollow = (userId) =>  (dispatch) => {\r\n   followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI),unfollowSuccess)\r\n\r\n}\r\n\r\nexport default usersReducer;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const pageSize = this.props;\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    //    this.props.setCurrentPage(pageNumber)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers: requestUsers})\r\n    )(UsersContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n\r\n                <img  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRznz1PWxWmvGz-iYdgOaxtiLu2TFaMhqbQ5wqx7MEqwHO4CDeg&usqp=CAU\"/>\r\n\r\n            <div className={classes.loginBlock}>\r\n                {props.isAuth?<div>{props.login} - <button onClick={props.logout}>Log out</button> </div>:<NavLink to={\"/login\"}>Login</NavLink>}\r\n            </div>\r\n\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authApi.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n\r\n    let response = await authApi.login(email, password, rememberMe);\r\n\r\n            if (response.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.messages.length > 0 ? response.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error: message}));\r\n            }\r\n        }\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let response = await authApi.logout();\r\n                  if (response.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n    }\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>( {\r\nisAuth: state.auth.isAuth,\r\nlogin: state.auth.login});\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/formsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/formsControls/FormsControls.module.css\"\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField(\"Login\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, \" Remember me\")}\r\n\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp = () => (dispatch) => {\r\n\r\nlet promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise]).then( () => {\r\n        dispatch(initializedSuccess());\r\n        }\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default appReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        sidebar: sidebarReducer,\r\n        usersPage: usersReducer,\r\n        auth: authReducer,\r\n        form: formReducer,\r\n            app: appReducer\r\n    });\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow._store_ = store;\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/preloader/Preloader\";\r\n\r\nexport const  withSuspense = (Component) => {\r\nreturn (props) => {\r\n    return <Suspense fallback={<Preloader/>}>\r\n        <Component {...props}/>\r\n    </Suspense>\r\n}\r\n\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/navbar/Navbar\";\r\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/news/News\";\r\nimport Music from \"./components/music/Music\";\r\nimport Settings from \"./components/settings/Settings\";\r\nimport UsersContainer from \"./components/users/UsersContainer\";\r\nimport HeaderContainer from \"./components/header/HeaderContainer\";\r\nimport Login from \"./components/login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst  DialogsContainer = React.lazy(() => import(\"./components/dialogs/DialogsContainer\"));\r\nconst  ProfileContainer = React.lazy(() => import(\"./components/profile/ProfileContainer\"));\r\n\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\nif(!this.props.initialized) {\r\n   return <Preloader/>\r\n}\r\n\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer) }\r\n                    />\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer) }\r\n                    />\r\n                    <Route path='/users'\r\n                           render={\r\n                               () => <UsersContainer/>\r\n                           }\r\n                    />\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                    <Route path='/news' render={News}/>\r\n                    <Route path='/music' render={Music}/>\r\n                    <Route path='/settings' render={Settings}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\n\r\nconst AppContainer = compose(withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\n\r\n\r\n    ReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\r\n\r\n    // If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta:{touched, error}, children}) => {\r\n    const  hasError = error && touched;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError?styles.error:\"\")}>\r\n            <div>{children}</div>\r\n            { hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const  {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}   /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const  {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}   /></FormControl>\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text=\"\") =>  (<div>\r\n    <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} />{text}\r\n</div>)","import preloader from \"../../../assets/images/Spinner-Preloader-Gif/96x96.gif\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = (props) => {\r\n    return <div>\r\n         <img src={preloader}  />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2_Svi\",\"error\":\"FormsControls_error__mVyHK\",\"formSummaryError\":\"FormsControls_formSummaryError__1FvpC\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\nif(value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\nreturn undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3SWeD\",\"user\":\"users_user__2FbvY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2zXmv\",\"selectedPage\":\"Paginator_selectedPage__27vGn\",\"pageNumber\":\"Paginator_pageNumber__2MFcx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__UzeGr\",\"loginBlock\":\"Header_loginBlock__9jYvT\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst  SET_STATUS = \"SET_STATUS\";\r\nconst DELETE_POST = \"DELETE_POST\"\r\n\r\nlet initialState =  {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 10},\r\n        {id: 2, message: \"It's my first post.\", likesCount: 15},\r\n        {id: 3, message: \"Yo.\", likesCount: 15},\r\n        {id: 4, message: \"Yo.\", likesCount: 15}\r\n\r\n    ],\r\n\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            {let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            }\r\n\r\n                let stateCopy = {...state};\r\n                stateCopy.posts = [...state.posts];\r\n                stateCopy.posts.push(newPost);\r\n\r\n            return stateCopy;}\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId )}\r\n            case SET_USER_PROFILE:\r\n        return {...state, profile: action.profile}\r\n        case SET_STATUS:\r\n        return {...state, status: action.status}\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST,newPostText});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) =>\r\n    ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport  const  getUserProfile = (userId) => async (dispatch) => {\r\n   let response =  await usersAPI.getProfile(userId);\r\n              dispatch(setUserProfile(response));\r\n\r\n}\r\nexport  const  getStatus = (userId) => async (dispatch) => {\r\n    let response =  await profileAPI.getStatus(userId)\r\n\r\n            dispatch(setStatus(response));\r\n\r\n}\r\nexport  const  updateStatus = (status) => async (dispatch) => {\r\n    let response =  await  profileAPI.updateStatus(status)\r\n                  if(response.resultCode === 0)\r\n            {dispatch(setStatus(status));}\r\n}\r\n\r\n\r\nexport default profileReducer;"],"sourceRoot":""}