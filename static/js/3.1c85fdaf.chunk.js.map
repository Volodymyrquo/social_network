{"version":3,"sources":["components/profile/profileInfo/ProfileInfo.module.css","components/profile/myPosts/MyPosts.module.css","components/profile/myPosts/post/Post.module.css","components/profile/profileInfo/ProfileStatusWithHooks.jsx","components/profile/profileInfo/ProfileInfo.jsx","components/profile/myPosts/post/Post.jsx","components/login/AddPostForm.jsx","components/profile/myPosts/MyPosts.jsx","components/profile/myPosts/MyPostsContainer.jsx","components/profile/Profile.jsx","components/profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","classes","img","alt","src","descriptionBlock","photos","large","descriptions","fullName","userId","Preloader","Post","item","message","count","maxLength10","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","name","validate","required","MyPosts","console","log","postsElements","posts","map","post","key","id","likesCount","postsBlock","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","Profile","MyPostsContainer","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.1c85fdaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__12yVG\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2RaO9\",\"descriptions\":\"ProfileInfo_descriptions__3geTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock___AvVD\",\"posts\":\"MyPosts_posts__3nKxG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3xQCu\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n       <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"----------\"}\r\n        </span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status,updateStatus}) => {\r\n    if(!profile) {\r\n      return  <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <img className={classes.img} alt={\"some img\"}\r\n                     src=\"https://www.thewowstyle.com/wp-content/uploads/2015/01/nature-images.jpg\"/>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                               <img src={profile.photos.large} alt=\"\"/>\r\n                               <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                               <div className={classes.descriptions}>\r\n                                   {profile.fullName}\r\n                               </div>\r\n                               <div className={classes.descriptions}>\r\n                                   {profile.userId}\r\n                               </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n                    <div className={classes.item}>\r\n                        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR7v7fQOygZEYtT-1uiVrzxeOovPIYD9tLagvKC7Wf-vZjvaX-I&usqp=CAU' />\r\n                      {props.message}\r\n                        <div>\r\n                        <span>{props.count} likes</span>\r\n                        </div>\r\n                    </div>\r\n\r\n               );\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/formsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder=\"Enter your post\" component={Textarea} name=\"newPostText\" validate={[required,maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default  reduxForm({form:\"post\"})(AddPostForm)\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./post/Post\";\r\nimport AddPostForm from \"../../login/AddPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\nconsole.log(\"RENDER\")\r\n    let postsElements = props.posts.map(post => <Post message={post.message} key={post.id} count={post.likesCount}/>)\r\n\r\nconst addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n}\r\n       return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n              <AddPostForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n\r\n                {postsElements}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\nreturn {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n}\n\n}\n\nlet mapDispatchToProps = (dispatch) =>{\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(MyPosts);\n","import React from \"react\";\r\nimport ProfileInfo from \"./profileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        if(!userId) {\r\n            this.props.history.push(\"/login\");\r\n        }\r\nthis.props.getUserProfile(userId);\r\nthis.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return <Profile {...this.props} />\r\n}\r\n\r\n\r\n}\r\n\r\nlet mapPropsToState = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default compose(\r\n    connect(mapPropsToState,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}